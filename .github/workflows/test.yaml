name: Go test

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        required: false
        default: ubuntu-latest
      go-version:
        type: string
        required: false
        default: stable
      working-directory:
        type: string
        required: false
        default: .

permissions:
  contents: read

concurrency:
  # Prefer cache reuse over concurrency
  group: ${{ inputs.runs-on }} ${{ github.head_ref || github.ref }}

jobs:
  gotest:
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Go setup
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}

      - name: Dependencies
        run: go get -v ./...

      - name: Build
        run: go build ./...

      - name: Test
        run: go test -v -vet=all ./...

      - name: Test with data race detection
        run: go test -race ./...

      - name: Run additional tests
        shell: bash
        run: |
          if [[ -e .github/ghactions-go-test-extra ]]; then
            find .github/ghactions-go-test-extra -mindepth 1 -maxdepth 1 -type f
          fi | \
          sort --version-sort | \
          while read -r i; do
            printf "::group::%q\n" "$i"
            if "$i"; then
              :
            else
              rc=$?
              printf "::error file=%q::Failed with code %d\n" "$i" "$rc"
            fi
            echo ::endgroup::
          done

# vim: set sw=2 sts=2 et :
